apiVersion: v1
kind: Service
metadata:
  name: dims-service
spec:
  ports:
    - port: 80
      targetPort: 3333
  selector:
    app: dims

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dims-deployment
spec:
  selector:
    matchLabels:
      app: dims
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: dims
    spec:
      serviceAccountName: dims-service-account  # Add the ServiceAccount

      #initContainers:
      #- name: cert-setup-init
      # image: keystore-image:latest # This image needs to be built from Dockerfile.keystore
      #  imagePullPolicy: IfNotPresent # Or Always, depending on your setup
      #  volumeMounts:
      #  - name: workdir # Mounts the shared volume
      #    mountPath: /app
        # env: # Pass environment variables to the init container
        # - name: LDAP_SERVER
        #   value: "ldaps.lisd.net" # Replace with your actual LDAP server if different
        # - name: LDAP_USER
        #   valueFrom: # Best practice to get sensitive info from a Secret
        #     secretKeyRef:
        #       name: ldap-credentials # Name of your Kubernetes Secret
        #       key: username          # Key within the Secret for username
        # - name: LDAP_PASSWORD
        #   valueFrom: # Best practice to get sensitive info from a Secret
        #     secretKeyRef:
        #       name: ldap-credentials # Name of your Kubernetes Secret
        #       key: password          # Key within the Secret for password
          
      containers:
        - image: swensadocker/dims:_DIMSIMAGE_
          name: dims
          resources:
            requests:
              memory: "1Gi"
              cpu: "250m"
            limits:
              memory: "2Gi"
              cpu: "500m"
          env:
          - name: JAVA_OPTS
            value: "-Djavax.net.ssl.trustStore=/app/my-truststore.jks -Djavax.net.ssl.trustStorePassword=changeit"
          - name: DB_HOST
            value: jdbc:mysql://mysql/dimsdb?allowPublicKeyRetrieval=true&useSSL=false
          - name: DB_USER
            value: root
          - name: DB_PASSWORD
            value: _GENERATE_PASSWORD_
          - name: AUTH_TYPE
            value: local
          - name: SCHEDULER_URL
            value: scheduler-service.default.svc.cluster.local
          ports:
            - containerPort: 3333
              name: dims
          volumeMounts:
            - name: scheduler-persistent-storage
              mountPath: /scheduler_files/
          #  - name: workdir
          #    mountPath: /app
      volumes:
        - name: scheduler-persistent-storage
          persistentVolumeClaim:
            claimName: scheduler-pv-claim
        #- name: workdir
        #  emptyDir: {}
       